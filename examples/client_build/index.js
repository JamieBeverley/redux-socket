(()=>{"use strict";const e={rxws:{fromServer:!0}};createAction("RXWS_CLIENT_CONNECTED",(e=>e),(()=>e)),createAction("RXWS_LOAD_FROM_SERVER",(e=>e),(()=>e)),createAction("RXWS_RECEIVE_STATE",(e=>e),(()=>e)),createAction("RXWS_SELF_CONNECTED",(e=>e),(()=>{})),createAction("RXWS_SELF_DISCONNECTED",(e=>e),(()=>{})),createAction("RXWS_SELF_ERROR",(e=>e),(()=>{})),createAction("RXWS_CLIENT_CONNECTED",(e=>e),(()=>{})),createAction("RXWS_CLIENT_DISCONNECTED",(e=>e),(()=>{})),createAction("RXWS_CLIENT_ERROR",(e=>e),(()=>{}));class t{constructor(e){this.id=t.ids++,t[this.id]=this,this.ws=e}sendAction(e){this.ws.send((e=>({action:e,type:ReduxWebsocket.wsMessageType}))(e))}delete(){delete t.clients[this.id]}}t.ids=0,t.clients={},t.broadcastAction=(e,c=[])=>{Object.values(t.clients).forEach((t=>{try{c.includes(t)||t.sendAction(e)}catch(e){console.error(e)}}))},console.log("plz?")})();